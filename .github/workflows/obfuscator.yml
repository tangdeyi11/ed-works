name: Build & AST Obfuscate Worker with Statement Randomization

on:
  push:
    branches:
      - main  # 仅在 main 分支 push 时触发

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # -------------------------------
      # 1. 拉取源码
      # -------------------------------
      - uses: actions/checkout@v3

      # -------------------------------
      # 2. 安装 Node.js
      # -------------------------------
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # -------------------------------
      # 3. 安装依赖
      # -------------------------------
      - name: Install dependencies
        run: |
          npm ci
          npm install --save-dev @babel/core @babel/cli babel-plugin-minify-mangle-names javascript-obfuscator

      # -------------------------------
      # 4. AST 重写 + 语句随机化（临时输出）
      # -------------------------------
      - name: AST Transform & Statement Randomization
        run: |
          mkdir -p temp

          # 使用 Babel 对 src/ 目录进行 AST 重写 + 随机化局部变量名
          # babel-randomize-statements.js 是自定义插件，用于打乱可交换语句顺序
          npx babel src/ --out-dir temp/ \
            --plugins babel-plugin-minify-mangle-names,./scripts/babel-randomize-statements.js

      # -------------------------------
      # 5. 轻量混淆 & 随机全局变量前缀
      #    并输出到源代码同目录
      # -------------------------------
      - name: Obfuscate Worker code
        run: |
          PREFIX="var_$(date +%s%N | sha256sum | head -c 6)"
          echo "Using prefix: $PREFIX"

          for file in temp/*.js; do
            BASENAME=$(basename "$file" .js)
            npx javascript-obfuscator "$file" \
              --output "src/${BASENAME}_obfuscated.js" \
              --compact true \
              --control-flow-flattening false \
              --string-array true \
              --string-array-encoding rc4 \
              --rename-globals true \
              --identifier-names-generator mangled \
              --identifier-prefix $PREFIX
          done
